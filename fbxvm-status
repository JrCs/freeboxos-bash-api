#! /bin/bash

# NBA : 20211114 
# NBA : Application to print VMs status on Freebox Delta
# NBA : Name, ID, CPU, memory, disk-path ... 
#
# NBA : 20220506 
# NBA : Modifying title + suppressing hardcoded URL 
#
# NBA : 20220509 
# NBA : Calling 'check_tool' function to check for necessary external tools
#




red='\033[01;31m'
blue='\033[01;34m'
green='\033[01;32m'
norm='\033[00m'

# application definition

MY_APP_ID="yourapp"
MY_APP_TOKEN="yourtoken"


# source the fbx-delta-nba_bash_api.sh which support HTTPS and public URL 
# fbx-delta-nba_bash_api.sh is in the current directory
source ${0/`basename $0`/}/fbx-delta-nba_bash_api.sh


# login
login_freebox "$MY_APP_ID" "$MY_APP_TOKEN"

# usage
#if [ -z "$1" ]; then echo usage: $0 api_name/api_arg ; exit 25 ; fi

# check external tool
check_tool curl
check_tool openssl


# call api
API="vm"
echo -e "\nSTATUS OF FREEBOX VM\n"
echo "URL CALLED : ${FREEBOX_URL}${_API_BASE_URL}v${_API_VERSION}/"
echo "API CALLED : $API"
echo
answer=$(call_freebox_api "/$API/")
dump_json_keys_values "$answer" >/dev/null
#dump_json_keys_values "$answer" 


i=0
while [[ $(get_json_value_for_key "$answer" "result[$i].name") != "" ]] 
do
#	echo i=$i
	name=$(get_json_value_for_key "$answer" "result[$i].name")
	id=$(get_json_value_for_key "$answer" "result[$i].id")
	mac=$(get_json_value_for_key "$answer" "result[$i].mac")
	state=$(get_json_value_for_key "$answer" "result[$i].status")
	memory=$(get_json_value_for_key "$answer" "result[$i].memory")
	vcpus=$(get_json_value_for_key "$answer" "result[$i].vcpus")
	disk_path=$(get_json_value_for_key "$answer" "result[$i].disk_path" |base64 -d)
	disk_type=$(get_json_value_for_key "$answer" "result[$i].disk_type")
	if [ ! -z "$name" ];
	then
        echo -e "\nVM-$i :" 
	echo -e "\tname = $name" 
	echo -e "\tid = $id" 
	[ "$state" == "running" ] \
		&& echo -e "\tstatus = ${green}${state}${norm}" \
		|| echo -e "\tstatus = ${red}${state}${norm}" 
	echo -e "\tmemory = $memory" 
	echo -e "\tvcpus = $vcpus" 
	echo -e "\tdisk_type = $disk_type" 
	echo -e "\tdisk_path = $disk_path" 
	echo -e "\tmac_address = $mac" 
	fi
	((i++))
#	i=$(($i+1))
done	

echo



